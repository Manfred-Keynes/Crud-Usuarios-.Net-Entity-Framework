<!--se envia un modelo que trae un listado de lementos tipo list item para llenar el drop-->
@model List<SelectListItem>
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <div class="form-group">
            Clase
            @Html.DropDownList("AnimalClass", Model, new { @class = "form-control", id="AnimalClass" })
        </div>

        <div class="form-group">
            Animal
            <select id="animal" name="animal" class="form-control"></select>
        </div>
    </div>
</div>

<script>
    var cboAnimalClass = document.getElementById("AnimalClass");

    //funcion para el llenado del hijo drop
    //y esta funcion se asignara al evento change de este drop  

    cboAnimalClass.addEventListener("change", Refresh);//evento change para cuando cambien de opcion se apica un refresh
    //por tanto se debe ejecutar al inicio para que llene pro primera vez el drop hijo
    Refresh();
    function Refresh() {
        //apifetch de Javascript recibe como parametro la url a donde se hace la solicitud 
        fetch("@Url.Content("~/Animal/Animal")" + "?IdAnimalClass=" + cboAnimalClass.value)
                                                   //nombre del parametro = combobox padre donde .value tiene el valor seleccionado del cual se refrescaran los datos
            .then(function (result) {
                if (result.ok) {
                    //retorna un arreglo segun el contenido 
                    return result.json();

                }
            })
            //parametro "data" nombre a criterio
            .then(function (data) {
                console.log(data);

             //recorriendo el arreglo proporcionado por la funcion "result"

                cbo = document.getElementById("animal");
                cbo.innerHTML = "";

                //se recorre segun el elemento que se esta obteniendo en ese momento
                data.forEach(function (element) {
                    //llenando el combobox hijo
                    
                    let opt = document.createElement("option");//crea una opcion del combobox por cada elemento

                    opt.appendChild(document.createTextNode(element.Text));//opt agrega un hijo osea el texto que va tener sea bien un tipo text node
                    opt.value = element.Value;//asignando el valor

                    cbo.appendChild(opt);//se agrega al dbo
                })

            })
    }
</script>

